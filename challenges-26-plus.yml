frame_loading:
  question: |
    Our site has a sidebar that takes forever to load, so our project
    manager wanted us to extract it into a lazy Turbo Frame.
    
    Now he wants us to show a loading indicator whenever we are
    loading its contents! Here's the loading code:
    
    ```html
    <turbo-frame id="app_sidebar">
        {{ include('templates/_busySidebar.html.twig') }}
    
        <span class="frame-loading-show fas fa-spinner fa-spin">
        </span>
    </turbo-frame>
    ```
    
    How can I show and hide this spinner *only* when the turbo frame
    is busy?
  explanation: |
    Whenever a Turbo Frame is making an Ajax request, it will add
    a `busy` attribute to its `<turbo-frame>` element. This is useful
    for adding all kinds of effects while loading!
  features:
    multiple_choice:
      choices:
        a: |
          ```css
          turbo-frame .frame-loading-show {
              display: none;
          }
          
          turbo-frame[busy] .frame-loading-show {
              display: inline-block;
          }
          ```
        b: |
          ```css
          turbo-frame[busy] .frame-loading-show {
              display: inline-block;
          }
          ```
        c: |
          ```css
          turbo-frame .frame-loading-show {
              display: none;
          }

          turbo-frame[loading] .frame-loading-show {
              display: inline-block;
          }
          ```
        d: |
          It's not possible to achieve this with *only* css. You would
          have to hook events in a stimulus controller and add/remove
          the classes when users click on a link to navigate within
          the frame.
      correct: a

form_disable_submit:
  question: |
    I was going through my website files and I saw this piece of code
    in `app.js`:
    
    ```js
    document.addEventListener('turbo:submit-start', (event) => {
        event.detail.formSubmission.submitter.classList.toggle('loading');
    });
    ```
    
    This must be the code responsible for adding a loading state to
    the buttons in my forms!
    
    How does the Turbo event `turbo:submit-start` work?
  explanation: |
    Turbo will fire the `turbo:submit-start` event on *any* form that gets
    submitted weather it belongs to a frame or not.
    
    > There are all kinds of information included within the
    > `event.detail.formSubmission` object!
  features:
    multiple_choice:
      choices:
        a: |
          `turbo:submit-start` gets dispatched every time a form gets submitted
          from within a turbo frame and contains very useful information about
          the form that is being submitted.
        b: |
          `turbo:submit-start` gets dispatched every time a form is rendered on a
          turbo frame and contains very useful information about the form that is
          being rendered.
        c: |
          `turbo:submit-start` gets dispatched every time a form is rendered *anywhere*
          on our site and contains very useful information about the form that is
          being rendered.
        d: |
          `turbo:submit-start` gets dispatched every time a form gets submitted
          *anywhere* on our site and contains very useful information about the
          form that is being submitted.
      correct: d
