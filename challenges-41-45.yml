turbo_stream:
  question: |
    What are Turbo Streams NOT used for?
  explanation: |
    Turbo Streams are used to update parts of the page without having to necesarily perform
    a request.

    Streams are very useful for applications that have to update constantly to events that
    aren't always generated by the user, like chat applications.
  features:
    multiple_choice:
      choices:
        a: |
          They are used to update another part of a page when we submit
          from a Turbo Frame.
        b: |
          They are used to update a part of our page periodically without
          having to perform continuous requests.
        c: |
          They are used to add and remove Turbo Frames to our page dynamically.
      correct: c

turbo_stream_2:
  question: |
    I'm building a chat application and the main chat template is located at
    `chat/index.stream.html.twig`.

    How should I render this template from a Symfony controller?
  explanation: |
    The response object `TurboStreamResponse()` is what makes the response special
    so that Turbo can handle it the right way in the Browser!
  features:
    multiple_choice:
      choices:
        a: |
          ```php
              return $this->render('chat/index.stream.html.twig', [
              ], new TurboStreamResponse());
          ```
        b: |
          ```php
              return $this->render('chat/index.stream.html.twig');
          ```
        c: |
          ```php
              return $this->render('chat/index.stream.html.twig', [
                  ], new Response());
          ```
        d: |
          ```php
              return $this->render('chat/index.stream.html.twig', [
                  new TurboStreamResponse(),
              ]);
          ```
      correct: a

turbo_stream_3:
  question: |
    In my chat application, I have a spot in the page template
    where I need to render this main chat flow:

    ```html
    <div id="chat-messages">
    </div>

    <div id="chat-input">
        <input type="text" id="chat-text">
        <button id="chat-submit">Submit!</button>
    </div>
    ```

    Now I need to have this chat stream template *inside* the `<div>` with
    `id="chat-message"`.

    How should I do it?
  explanation: |
    The most important features of a `turbo-stream` element are its
    `action`, specifying how it should perform the update; and `target`
    attributes, specifying *where* it should update.

    They also are followed immediately by a `<template>` element... which doesn't
    really do anything, but *is* needed.

    Fun fact! You can also update elements using a CSS selector instead of an id. For example,
    `targets=".chat"` (notice the *s* on "targets") would update all elements with a `chat` class.
  features:
    multiple_choice:
      choices:
        a: |
          ```twig
          <turbo-stream action="update" target="chat-messages">
              { % for message in chat.messages % }
              <p>
                  <span class="user">{{ message.from }}</span>
                  <span class="message">{{ message.text }}</span>
              </p>
              {% endfor %}
          </turbo-stream>
        ```
        b: |
          ```twig
          <turbo-stream action="update" target="chat-messages">
              <template>
                  {% for message in chat.messages %}
                  <p>
                      <span class="user">{{ message.from }}</span>
                      <span class="message">{{ message.text }}</span>
                  </p>
                  {% endfor %}
              </template>
          </turbo-stream>
          ```
        c: |
          ```twig
          <turbo-stream>
              <template action="update" target="chat-messages">
                  {% for message in chat.messages %}
                  <p>
                      <span class="user">{{ message.from }}</span>
                      <span class="message">{{ message.text }}</span>
                  </p>
                  {% endfor %}
              </template>
          </turbo-stream>
          ```
        d: |
          ```twig
          <turbo-stream target="chat-messages">
              <template action="update">
                  {% for message in chat.messages %}
                  <p>
                      <span class="user">{{ message.from }}</span>
                      <span class="message">{{ message.text }}</span>
                  </p>
                  {% endfor %}
              </template>
          </turbo-stream>
          ```
      correct: b

stream_everything:
  question: |
    My awesome chat application has 2 template fragments that I need to
    update via Turbo Streams. One, the chat messages, lives under `chat/_messages.html.twig`.
    A second one, a list of users, is on `chat/_user-list.html.twig`.

    When a user enters a message on the chat, we need to update both! (We'll see
    how to receive server notifications soon!).

    How can I accomplish this by rendering only one Turbo Stream request?
  explanation: |
    You can render multiple streams in one template. This is very useful to update
    all the dynamic parts in a page in one go!

    > The `replace` action tells us to replace the entire `<div>` element
    > with the response, rather than update the contents inside it.
  features:
    multiple_choice:
      choices:
        a: |
          ```twig
          <turbo-stream>
              <template action="update" target="chat-messages">
                  {{ include('chat/_messages.html.twig') }}
              </template>

              <template action="replace" target="chat-user-list">
                  {{ include('chat/_user-list.html.twig') }}
              </template>
          </turbo-stream>
          ```
        b: |
          ```twig
          <turbo-stream action="update">
              <turbo-stream-fragment target="chat-messages">
                  <template>
                      {{ include('chat/_messages.html.twig') }}
                  </template>
              </turbo-stream-fragment>

              <turbo-stream-fragment target="chat-user-list">
                  <template>
                      {{ include('chat/_user-list.html.twig') }}
                  </template>
              </turbo-stream>
          </turbo-stream>
          ```
        c: |
          ```twig
          <turbo-stream action="update" target="chat-messages">
              <template>
                  {{ include('chat/_messages.html.twig') }}
              </template>
          </turbo-stream>

          <turbo-stream action="replace" target="char-user-list">
              <template>
                  {{ include('chat/_user-list.html.twig') }}
              </template>
          </turbo-stream>
          ```
        d: |
          There cannot be more than one `<turbo-stream>` element per request!
      correct: c
